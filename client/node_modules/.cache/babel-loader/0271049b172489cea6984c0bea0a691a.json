{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullstackClass\\\\Projects\\\\final-project\\\\thepeoplespurse\\\\client\\\\src\\\\components\\\\SuggestedBudgets\\\\unweightedBudget.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./suggestedBudgets.css\";\nimport axios from \"axios\";\nexport default class UnweightedBudget extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datasets: [{\n        data: [],\n        // data: [7, 10, 20, 20, 30, 30, 10, 7, 10, 20, 20, 30, 30, 10, 7, 10, 20, 20, 30],\n        backgroundColor: [\"#124E73\", \"#176FA6\", \"#11A8BD\", \"#10B39A\", \"#08C976\", \"#F9F03E\", \"#F2C849\", \"#F2B138\", \"#F9A23E\", \"#F29829\", \"#124E73\", \"#176FA6\", \"#11A8BD\", \"#10B39A\", \"#08C976\", \"#F9F03E\", \"#F2C849\", \"#F2B138\", \"#F9A23E\", \"#F29829\"]\n      }],\n      borderColor: ['rgba(57, 249, 202)'],\n      borderWidth: 1,\n      labels: ['Dept of State', 'Dept of Defense', 'Dept of Energy', 'Dept of Labor', 'Dept of Agriculture', 'Dept of Homeland Security', 'Dept of Transportation', 'Dept of Commerce', 'Dept of Education', 'Dept of Health & Human Services', 'Dept of Housing & Urban Development', 'Dept of Justice', 'Dept of the Interior', 'Dept of the Treasury', 'Environmental Protection Agency', 'Federal Communication Comission', 'Federal Election Comission', 'Federal Trade Comission', 'Equal Employment Opportunity Comission']\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/vote/get').then(res => {\n      const votes = res.data;\n      console.log(res);\n      this.setState({\n        votes\n      });\n      console.log(votes);\n      console.log(votes.length); //agriculture data manipulation\n\n      for (var i = 0; i < votes.length; i++) {} //data manipulation piece\n      //defines each dept as an array\n\n\n      const ag = [];\n      const commerce = [];\n      const communicate = []; //for loop that grabs each of the values of depts\n\n      for (var i = 0; i < votes.length; i++) {\n        //pushes the dept values to arrays\n        ag.push(votes[i].agriculture);\n        commerce.push(votes[i].commerce);\n        communicate.push(votes[i].communication);\n      } //totals the dept values \n\n\n      const agTotal = ag.reduce((a, b) => a + b, 0);\n      const commerceTotal = commerce.reduce((a, b) => a + b, 0);\n      const communicateTotal = communicate.reduce((a, b) => a + b, 0); //averages out the dept totals based on vote counts\n\n      const agAvg = agTotal / votes.length;\n      const commerceAvg = commerceTotal / votes.length;\n      const communicateAvg = communicateTotal / votes.length; //pushing arrays to state so they can be used in our chart\n\n      const newArr = [agAvg, commerceAvg, communicateAvg];\n      this.setState({\n        data: newArr\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"suggestedSpending-unweighted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Unweighted Budget',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        },\n        tooltips: {\n          intersect: false\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/FullstackClass/Projects/final-project/thepeoplespurse/client/src/components/SuggestedBudgets/unweightedBudget.js"],"names":["React","Doughnut","axios","UnweightedBudget","Component","state","datasets","data","backgroundColor","borderColor","borderWidth","labels","componentDidMount","get","then","res","votes","console","log","setState","length","i","ag","commerce","communicate","push","agriculture","communication","agTotal","reduce","a","b","commerceTotal","communicateTotal","agAvg","commerceAvg","communicateAvg","newArr","render","title","display","text","fontSize","legend","position","tooltips","intersect","animation","animateScale","animateRotate","layout","padding","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./suggestedBudgets.css\";\nimport axios from \"axios\";\n\n\nexport default class UnweightedBudget extends React.Component {\n  state = {\n    datasets: [{\n      data: [ ],\n      // data: [7, 10, 20, 20, 30, 30, 10, 7, 10, 20, 20, 30, 30, 10, 7, 10, 20, 20, 30],\n      backgroundColor: [\n        \"#124E73\",\n        \"#176FA6\",\n        \"#11A8BD\",\n        \"#10B39A\",\n        \"#08C976\",\n\n        \"#F9F03E\",\n        \"#F2C849\",\n        \"#F2B138\",\n        \"#F9A23E\",\n        \"#F29829\",\n\n        \"#124E73\",\n        \"#176FA6\",\n        \"#11A8BD\",\n        \"#10B39A\",\n        \"#08C976\",\n\n        \"#F9F03E\",\n        \"#F2C849\",\n        \"#F2B138\",\n        \"#F9A23E\",\n        \"#F29829\"\n      ],\n    }],\n    borderColor: [\n      'rgba(57, 249, 202)'\n    ],\n    borderWidth: 1,\n    labels: ['Dept of State', 'Dept of Defense', 'Dept of Energy', 'Dept of Labor', 'Dept of Agriculture', 'Dept of Homeland Security', 'Dept of Transportation', 'Dept of Commerce', 'Dept of Education', 'Dept of Health & Human Services', 'Dept of Housing & Urban Development', 'Dept of Justice', 'Dept of the Interior', 'Dept of the Treasury', 'Environmental Protection Agency', 'Federal Communication Comission', 'Federal Election Comission', 'Federal Trade Comission', 'Equal Employment Opportunity Comission']\n  }\n\n  componentDidMount() {\n    axios.get('/api/vote/get')\n      .then(res => {\n        const votes = res.data;\n        console.log(res);\n        this.setState({ votes });\n        console.log(votes);\n        console.log(votes.length);\n\n        //agriculture data manipulation\n\n        for (var i = 0; i < votes.length; i++) {\n\n        }\n        \n\n        \n\n        //data manipulation piece\n\n        //defines each dept as an array\n        const ag = [];\n        const commerce = [];\n        const communicate = [];\n        \n        //for loop that grabs each of the values of depts\n        for (var i = 0; i < votes.length; i++) {\n\n          //pushes the dept values to arrays\n          ag.push(votes[i].agriculture);\n          commerce.push(votes[i].commerce);\n          communicate.push(votes[i].communication)\n\n\n        }\n\n        //totals the dept values \n        const agTotal = ag.reduce((a, b) => a + b, 0)\n        const commerceTotal = commerce.reduce((a, b) => a + b, 0)\n        const communicateTotal = communicate.reduce((a, b) => a + b, 0)\n\n        //averages out the dept totals based on vote counts\n        const agAvg = agTotal / votes.length\n        const commerceAvg = commerceTotal / votes.length\n        const communicateAvg = communicateTotal / votes.length\n        \n\n\n        //pushing arrays to state so they can be used in our chart\n        const newArr = [agAvg, commerceAvg, communicateAvg,];\n        this.setState({\n\n          data: newArr,\n\n        })\n      })\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"suggestedSpending-unweighted\">\n        <Doughnut\n          data={this.state}\n          options={{\n            title: {\n              display: true,\n              text: 'Unweighted Budget',\n              fontSize: 20\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            },\n            tooltips: {\n              intersect: false,\n            },\n\n            animation: {\n              animateScale: true,\n              animateRotate: true\n            },\n            layout: {\n              padding: {\n                left: 50,\n                right: 0,\n                top: 0,\n                bottom: 0\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}