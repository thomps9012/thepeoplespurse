{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullstackClass\\\\Projects\\\\final-project\\\\thepeoplespurse\\\\client\\\\src\\\\components\\\\BudgetSlider\\\\budgetSlider.js\";\nimport React from 'react';\nimport \"./style.css\";\nimport UnweightedBudget from \"../SuggestedBudgets/unweightedBudget\";\nimport WeightedBudget from \"../SuggestedBudgets/weightedBudget\";\nimport Checkbox from '../SuggestedBudgets/checkbox';\nconst OPTIONS = [\"One\", \"Two\"];\n\nclass BudgetSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkboxes: OPTIONS.reduce((options, option) => ({ ...options,\n        [option]: false\n      }), {})\n    };\n\n    this.selectAllCheckboxes = isSelected => {\n      Object.keys(this.state.checkboxes).forEach(checkbox => {\n        // BONUS: Can you explain why we pass updater function to setState instead of an object?\n        this.setState(prevState => ({\n          checkboxes: { ...prevState.checkboxes,\n            [checkbox]: isSelected\n          }\n        }));\n      });\n    };\n\n    this.selectAll = () => this.selectAllCheckboxes(true);\n\n    this.deselectAll = () => this.selectAllCheckboxes(false);\n\n    this.handleCheckboxChange = changeEvent => {\n      const {\n        name\n      } = changeEvent.target;\n      this.setState(prevState => ({\n        checkboxes: { ...prevState.checkboxes,\n          [name]: !prevState.checkboxes[name]\n        }\n      }));\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      Object.keys(this.state.checkboxes).filter(checkbox => this.state.checkboxes[checkbox]).forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n    };\n\n    this.createCheckbox = option => /*#__PURE__*/React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    });\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.createCheckboxes(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Save\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"budgetSlider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"slider round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default BudgetSlider;","map":{"version":3,"sources":["C:/FullstackClass/Projects/final-project/thepeoplespurse/client/src/components/BudgetSlider/budgetSlider.js"],"names":["React","UnweightedBudget","WeightedBudget","Checkbox","OPTIONS","BudgetSlider","Component","state","checkboxes","reduce","options","option","selectAllCheckboxes","isSelected","Object","keys","forEach","checkbox","setState","prevState","selectAll","deselectAll","handleCheckboxChange","changeEvent","name","target","handleFormSubmit","formSubmitEvent","preventDefault","filter","console","log","createCheckbox","createCheckboxes","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./style.css\";\nimport UnweightedBudget from \"../SuggestedBudgets/unweightedBudget\";\nimport WeightedBudget from \"../SuggestedBudgets/weightedBudget\";\nimport Checkbox from '../SuggestedBudgets/checkbox';\n\nconst OPTIONS = [\"One\", \"Two\"];\n\nclass BudgetSlider extends React.Component {\n    state = {\n        checkboxes: OPTIONS.reduce(\n            (options, option) => ({\n                ...options,\n                [option]: false\n            }),\n            {}\n        )\n    };\n\n    selectAllCheckboxes = isSelected => {\n        Object.keys(this.state.checkboxes).forEach(checkbox => {\n            // BONUS: Can you explain why we pass updater function to setState instead of an object?\n            this.setState(prevState => ({\n                checkboxes: {\n                    ...prevState.checkboxes,\n                    [checkbox]: isSelected\n                }\n            }));\n        });\n    };\n\n    selectAll = () => this.selectAllCheckboxes(true);\n\n    deselectAll = () => this.selectAllCheckboxes(false);\n\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n\n        this.setState(prevState => ({\n            checkboxes: {\n                ...prevState.checkboxes,\n                [name]: !prevState.checkboxes[name]\n            }\n        }));\n    };\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        Object.keys(this.state.checkboxes)\n            .filter(checkbox => this.state.checkboxes[checkbox])\n            .forEach(checkbox => {\n                console.log(checkbox, \"is selected.\");\n            });\n    };\n\n    createCheckbox = option => (\n        <Checkbox\n            label={option}\n            isSelected={this.state.checkboxes[option]}\n            onCheckboxChange={this.handleCheckboxChange}\n            key={option}\n        />\n    );\n\n    createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    {this.createCheckboxes()}\n\n\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Save\n                </button>\n                </form>\n\n                <form className=\"budgetSlider\">\n                    <label className=\"switch\">\n                        <input type=\"checkbox\">\n                        </input>\n\n                        <span className=\"slider round\"></span>\n                    </label>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default BudgetSlider;"]},"metadata":{},"sourceType":"module"}